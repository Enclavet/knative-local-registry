apiVersion: batch/v1
kind: Job
metadata:
  name: registry-cert-cluster-ca
  namespace: registry
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      serviceAccount: cert-mgmt
      containers:
      - name: bash
        image: solsson/kubectl-cfssl@sha256:bbfa272226b8d04fdbb2caeb724c115052d8ee2f9a1c1d5dc663e3d95aa4a146
        imagePullPolicy: Never
        command:
        - /bin/sh
        args:
        - -c
        - |
          cat <<EOF | cfssl genkey - | cfssljson -bare server
          {
            "hosts": [
              "unauthenticated.registry.svc.cluster.local",
              "authenticated.registry.svc.cluster.local",
              "knative-local-registry"
            ],
            "CN": "registry.svc.cluster.local",
            "key": {
              "algo": "ecdsa",
              "size": 256
            }
          }
          EOF

          cat <<EOF | tee server-csr.yaml | kubectl create -f - || cat server-csr.yaml
          apiVersion: certificates.k8s.io/v1beta1
          kind: CertificateSigningRequest
          metadata:
            name: registry-tls
          spec:
            groups:
            - system:authenticated
            request: $(cat server.csr | base64 | tr -d '\n')
            usages:
            - digital signature
            - key encipherment
            - server auth
          EOF
          
          kubectl describe csr registry-tls || echo "\nFailed to create csr (RBAC issue probably)\n"

          while ! $(kubectl get csr registry-tls); do
            echo "\n"
            echo "Waiting for someone/somebot to run:"
            echo "  kubectl certificate approve registry-tls"
            echo "\n"
            sleep 10
          done

          kubectl get csr registry-tls -o jsonpath='{.status.certificate}' | base64 --decode > server.crt

          cat <<EOF | tee registry-tls-secret.yaml | kubectl create -f - || cat registry-tls-secret.yaml
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: registry-tls
            namespace: registry
          data:
            tls.crt: $(cat server.crt | base64 | tr -d '\n')
            tls.key: $(cat server-key.pem | base64 | tr -d '\n')
          EOF

          kubectl describe secret registry-tls || echo "\nFailed to create secret (RBAC issue probably)\n"
